name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose Environment to Run Tests Against"
        required: true
        default: "staging"
        type: choice
        options:
          - UAT
          - Staging
      test_type:
        description: "Choose Test Suite to Run"
        required: true
        default: "All"
        type: choice
        options:
          - Smoke
          - Regression
          - All
      test_name_filter:
        description: "Optional: Filter tests by name (regex supported)"
        required: false
        default: ""
        type: string
  schedule:
    - cron: "0 5 * * 1-5" # 12:00 AM (midnight) EST
    - cron: "0 17 * * 1-5" # 12:00 PM (noon) EST
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
      fail-fast: false
    env:
      TEST_SUITE: ${{ github.event.inputs.test_type }}
      TEST_NAME_FILTER: ${{ github.event.inputs.test_name_filter }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          echo "Running $TEST_SUITE tests"
          echo "Test name filter: $TEST_NAME_FILTER"

          # Build grep argument dynamically
          GREP_ARG=""
          if [ -n "$TEST_NAME_FILTER" ]; then
            GREP_ARG="--grep $TEST_NAME_FILTER"
          fi

          if [ "$TEST_SUITE" = "Smoke" ]; then
            echo "Running Smoke suite..."
            npx playwright test --grep "@smoke" $GREP_ARG --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --reporter=html,blob
          elif [ "$TEST_SUITE" = "Regression" ]; then
            echo "Running Regression suite..."
            npx playwright test --grep "@regression" $GREP_ARG --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --reporter=html,blob
          else
            echo "Running All tests..."
            npx playwright test $GREP_ARG --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --reporter=html,blob
          fi

      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ env.TEST_SUITE }}-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 14

  merge-reports:
    if: ${{ !cancelled() }}
    needs: [playwright-tests]
    runs-on: ubuntu-latest
    env:
      TEST_SUITE: ${{ github.event.inputs.test_type }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v5
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report-${{ env.TEST_SUITE }}-attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14
